{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\src\\\\BookList.js\";\nimport React from 'react';\nimport Book from './Book';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nvar BooksList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BooksList, _React$Component);\n\n  function BooksList(props) {\n    var _this;\n\n    _classCallCheck(this, BooksList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BooksList).call(this, props));\n\n    _this.updateBookShelf = function (id, value, target) {\n      // this.setState(currState => ({\n      //     books: currState.books\n      // }));\n      var changedCurrReading = _this.state.currReading.filter(function (book) {\n        return book.id === id;\n      });\n\n      var changedWannaRead = _this.state.wannaRead.filter(function (book) {\n        return book.id === id;\n      });\n\n      var changedRead = _this.state.read.filter(function (book) {\n        return book.id === id;\n      });\n\n      console.log(id, value, target);\n      console.log(changedCurrReading, changedWannaRead, changedRead);\n\n      if (changedCurrReading.length) {\n        _this.setState(function (currState) {\n          return {\n            currReading: currState.currReading.filter(function (book) {\n              return book.id !== id;\n            }),\n            wannaRead: _toConsumableArray(currState.wannaRead).concat([changedCurrReading[0]])\n          };\n        });\n      }\n\n      if (changedWannaRead.length) {}\n\n      if (changedRead.length) {}\n\n      console.log(_this.state);\n    };\n\n    _this.removeFromShelf = function (shelf, bookId) {\n      var filtered = shelf.filter(function (book) {\n        return book.id !== bookId;\n      });\n      console.log(filtered);\n\n      _this.setState(function (currState) {\n        return {\n          shelf: []\n        };\n      });\n    };\n\n    _this.state = {\n      currReading: [],\n      wannaRead: [],\n      read: []\n    };\n    return _this;\n  }\n\n  _createClass(BooksList, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      console.log('All', props.books);\n      this.setState(function (currState) {\n        return {\n          currReading: props.books.filter(function (book) {\n            return book.shelf === 'currentlyReading';\n          })\n        };\n      });\n      this.setState(function (currState) {\n        return {\n          wannaRead: props.books.filter(function (book) {\n            return book.shelf === 'wantToRead';\n          })\n        };\n      });\n      this.setState(function (currState) {\n        return {\n          read: props.books.filter(function (book) {\n            return book.shelf === 'read';\n          })\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          currReading = _this$state.currReading,\n          wannaRead = _this$state.wannaRead,\n          read = _this$state.read;\n      return React.createElement(\"div\", {\n        className: \"list-books-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"open-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/search\",\n        className: \"open-search-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Add a book\")), React.createElement(\"div\", {\n        className: \"bookshelf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"bookshelf-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Currently Reading\"), React.createElement(\"div\", {\n        className: \"bookshelf-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, currReading.map(function (book) {\n        return React.createElement(Book, {\n          key: book.id,\n          book: book,\n          onUpdateShelf: _this2.updateBookShelf,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        });\n      })))), React.createElement(\"div\", {\n        className: \"bookshelf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"bookshelf-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Want to Read\"), React.createElement(\"div\", {\n        className: \"bookshelf-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, wannaRead.map(function (book) {\n        return React.createElement(Book, {\n          key: book.id,\n          book: book,\n          onUpdateShelf: _this2.updateBookShelf,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        });\n      })))), React.createElement(\"div\", {\n        className: \"bookshelf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"bookshelf-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Read\"), React.createElement(\"div\", {\n        className: \"bookshelf-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, read.map(function (book) {\n        return React.createElement(Book, {\n          key: book.id,\n          book: book,\n          onUpdateShelf: _this2.updateBookShelf,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        });\n      })))));\n    }\n  }]);\n\n  return BooksList;\n}(React.Component);\n\nBooksList.propTypes = {\n  books: PropTypes.array.isRequired\n};\nexport default BooksList;","map":{"version":3,"sources":["C:\\Users\\Simin\\Documents\\ReactND\\P1\\src\\BookList.js"],"names":["React","Book","PropTypes","Link","BooksList","props","updateBookShelf","id","value","target","changedCurrReading","state","currReading","filter","book","changedWannaRead","wannaRead","changedRead","read","console","log","length","setState","currState","removeFromShelf","shelf","bookId","filtered","books","map","Component","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Book from './Book'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nclass BooksList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            currReading: [],\r\n            wannaRead: [],\r\n            read: [],\r\n        }\r\n    }\r\n\r\n\r\n    componentWillReceiveProps(props) {\r\n        console.log('All', props.books)\r\n        this.setState(currState => ({\r\n            currReading: props.books.filter((book) => (\r\n                book.shelf === 'currentlyReading'\r\n            ))\r\n        }))\r\n        this.setState(currState => ({\r\n            wannaRead: props.books.filter((book) => (\r\n                book.shelf === 'wantToRead'\r\n            ))\r\n        }))\r\n\r\n        this.setState(currState => ({\r\n            read: props.books.filter((book) => (\r\n                book.shelf === 'read'\r\n            ))\r\n        }))\r\n    }\r\n\r\n    updateBookShelf = (id, value, target) => {\r\n        // this.setState(currState => ({\r\n        //     books: currState.books\r\n        // }));\r\n        const changedCurrReading = this.state.currReading.filter(book => book.id === id)\r\n        const changedWannaRead = this.state.wannaRead.filter(book => book.id === id)\r\n        const changedRead = this.state.read.filter(book => book.id === id)\r\n        console.log(id, value, target)\r\n        console.log(changedCurrReading, changedWannaRead, changedRead)\r\n        if (changedCurrReading.length) {\r\n            this.setState(currState => ({\r\n                currReading: currState.currReading.filter((book) => (\r\n                    book.id !== id\r\n                )),\r\n                wannaRead: [...currState.wannaRead, changedCurrReading[0]]\r\n            }))\r\n        }\r\n        if (changedWannaRead.length) { }\r\n        if (changedRead.length) { }\r\n        console.log(this.state)\r\n    }\r\n\r\n    removeFromShelf = (shelf, bookId) => {\r\n        const filtered = shelf.filter(book => book.id !== bookId)\r\n        console.log(filtered)\r\n        this.setState(currState => ({\r\n            shelf: []\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        const { currReading, wannaRead, read } = this.state\r\n\r\n        return (\r\n            <div className=\"list-books-content\">\r\n                <div className=\"open-search\">\r\n                    <Link to=\"/search\" className=\"open-search-link\">Add a book</Link>\r\n                </div>\r\n                <div className=\"bookshelf\">\r\n                    <h2 className=\"bookshelf-title\">Currently Reading</h2>\r\n                    <div className=\"bookshelf-books\">\r\n                        <ol className=\"books-grid\">\r\n                            {currReading.map(book => (<Book key={book.id} book={book} onUpdateShelf={this.updateBookShelf} />))}\r\n                        </ol>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bookshelf\">\r\n                    <h2 className=\"bookshelf-title\">Want to Read</h2>\r\n                    <div className=\"bookshelf-books\">\r\n                        <ol className=\"books-grid\">\r\n                            {wannaRead.map(book => (<Book key={book.id} book={book} onUpdateShelf={this.updateBookShelf} />))}\r\n                        </ol>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bookshelf\">\r\n                    <h2 className=\"bookshelf-title\">Read</h2>\r\n                    <div className=\"bookshelf-books\">\r\n                        <ol className=\"books-grid\">\r\n                            {read.map(book => (<Book key={book.id} book={book} onUpdateShelf={this.updateBookShelf} />))}\r\n                        </ol>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nBooksList.propTypes = {\r\n    books: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default BooksList"]},"metadata":{},"sourceType":"module"}