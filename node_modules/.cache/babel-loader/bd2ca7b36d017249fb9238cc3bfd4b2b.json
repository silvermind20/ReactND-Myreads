{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\src\\\\ChangeShelf.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar ChangeShelf =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChangeShelf, _Component);\n\n  function ChangeShelf() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ChangeShelf);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ChangeShelf)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.updateBookShelf = function (event) {};\n\n    return _this;\n  }\n\n  _createClass(ChangeShelf, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _props = props,\n          book = _props.book,\n          books = _props.books;\n      var currentShelf = 'none';\n      return React.createElement(\"div\", {\n        className: \"book-shelf-changer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"book-shelf-select\",\n        value: currentShelf,\n        onChange: function onChange(option) {\n          return _this2.handleSelect(book.id, option.currentTarget.value, option.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"move\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Move to...\"), React.createElement(\"option\", {\n        value: \"currentlyReading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Currently Reading\"), React.createElement(\"option\", {\n        value: \"wantToRead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Want to Read\"), React.createElement(\"option\", {\n        value: \"read\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Read\"), React.createElement(\"option\", {\n        value: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"None\")));\n    }\n  }]);\n\n  return ChangeShelf;\n}(Component);\n\nChangeShelf.propTypes = {\n  book: PropTypes.object.isRequired,\n  books: PropTypes.array.isRequired,\n  updateBookShelf: PropTypes.func.isRequired\n};\nexport default ChangeShelf;","map":{"version":3,"sources":["C:\\Users\\Simin\\Documents\\ReactND\\P1\\src\\ChangeShelf.js"],"names":["React","Component","PropTypes","ChangeShelf","updateBookShelf","event","props","book","books","currentShelf","option","handleSelect","id","currentTarget","value","target","propTypes","object","isRequired","array","func"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEMC,W;;;;;;;;;;;;;;;;;;UACFC,e,GAAkB,UAAAC,KAAK,EAAI,CAAG,C;;;;;;;6BAErB;AAAA;;AAAA,mBACmBC,KADnB;AAAA,UACGC,IADH,UACGA,IADH;AAAA,UACSC,KADT,UACSA,KADT;AAGL,UAAMC,YAAY,GAAG,MAArB;AAEA,aACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAsC,QAAA,KAAK,EAAEA,YAA7C;AAA2D,QAAA,QAAQ,EAAE,kBAAAC,MAAM;AAAA,iBAAI,MAAI,CAACC,YAAL,CAAkBJ,IAAI,CAACK,EAAvB,EAA2BF,MAAM,CAACG,aAAP,CAAqBC,KAAhD,EAAuDJ,MAAM,CAACK,MAAP,CAAcD,KAArE,CAAJ;AAAA,SAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,QAAQ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAQ,QAAA,KAAK,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFJ,EAGI;AAAQ,QAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ,EAII;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,EAKI;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,CADJ,CADJ;AAgBH;;;;EAxBqBb,S;;AA2B1BE,WAAW,CAACa,SAAZ,GAAwB;AACpBT,EAAAA,IAAI,EAAEL,SAAS,CAACe,MAAV,CAAiBC,UADH;AAEpBV,EAAAA,KAAK,EAAEN,SAAS,CAACiB,KAAV,CAAgBD,UAFH;AAGpBd,EAAAA,eAAe,EAAEF,SAAS,CAACkB,IAAV,CAAeF;AAHZ,CAAxB;AAMA,eAAef,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ChangeShelf extends Component {\r\n    updateBookShelf = event => { }\r\n\r\n    render() {\r\n        const { book, books } = props\r\n        \r\n        const currentShelf = 'none'\r\n\r\n        return (\r\n            <div className=\"book-shelf-changer\">\r\n                <select className=\"book-shelf-select\" value={currentShelf} onChange={option => this.handleSelect(book.id, option.currentTarget.value, option.target.value)} >\r\n                    <option value=\"move\" disabled>Move to...</option>\r\n                    <option value=\"currentlyReading\">Currently Reading</option>\r\n                    <option value=\"wantToRead\">Want to Read</option>\r\n                    <option value=\"read\">Read</option>\r\n                    <option value=\"none\">None</option>\r\n                    {/* {this.state.shelves.map(s => (\r\n                        (s.value === book.shelf) ?\r\n                            (<option key={s.key} value={s.value}>&#10003; {s.display}</option>) :\r\n                            (<option key={s.key} value={s.value}>{s.display}</option>)\r\n                    ))} */}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nChangeShelf.propTypes = {\r\n    book: PropTypes.object.isRequired,\r\n    books: PropTypes.array.isRequired,\r\n    updateBookShelf: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ChangeShelf"]},"metadata":{},"sourceType":"module"}