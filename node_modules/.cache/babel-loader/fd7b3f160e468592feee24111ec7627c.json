{"ast":null,"code":"import _readOnlyError from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/readOnlyError\";\nimport _classCallCheck from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\src\\\\ChangeShelf.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar ChangeShelf =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChangeShelf, _Component);\n\n  function ChangeShelf() {\n    _classCallCheck(this, ChangeShelf);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ChangeShelf).apply(this, arguments));\n  }\n\n  _createClass(ChangeShelf, [{\n    key: \"render\",\n    // updateBookShelf = event => { this.props.updateBookShelf(this.props.book, event.target.value) }\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          book = _this$props.book,\n          books = _this$props.books;\n      var currentShelf = 'none';\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = books[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n\n          if (item.id === book.id) {\n            currentShelf = (_readOnlyError(\"currentShelf\"), item.shelf);\n            break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"book-shelf-changer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"book-shelf-select\",\n        defaultValue: currentShelf,\n        onChange: function onChange(option) {\n          return _this.props.updateBookShelf(_this.props.book, event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"move\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Move to...\"), React.createElement(\"option\", {\n        value: \"currentlyReading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Currently Reading\"), React.createElement(\"option\", {\n        value: \"wantToRead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Want to Read\"), React.createElement(\"option\", {\n        value: \"read\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Read\"), React.createElement(\"option\", {\n        value: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"None\")));\n    }\n  }]);\n\n  return ChangeShelf;\n}(Component);\n\nChangeShelf.propTypes = {\n  book: PropTypes.object.isRequired,\n  books: PropTypes.array.isRequired,\n  updateBookShelf: PropTypes.func.isRequired\n};\nexport default ChangeShelf;","map":{"version":3,"sources":["C:\\Users\\Simin\\Documents\\ReactND\\P1\\src\\ChangeShelf.js"],"names":["React","Component","PropTypes","ChangeShelf","props","book","books","currentShelf","item","id","shelf","option","updateBookShelf","event","target","value","propTypes","object","isRequired","array","func"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEMC,W;;;;;;;;;;;;;AACF;6BAES;AAAA;;AAAA,wBACmB,KAAKC,KADxB;AAAA,UACGC,IADH,eACGA,IADH;AAAA,UACSC,KADT,eACSA,KADT;AAGL,UAAMC,YAAY,GAAG,MAArB;AAHK;AAAA;AAAA;;AAAA;AAIL,6BAAiBD,KAAjB,8HAAwB;AAAA,cAAfE,IAAe;;AACpB,cAAIA,IAAI,CAACC,EAAL,KAAYJ,IAAI,CAACI,EAArB,EAAyB;AACrBF,YAAAA,YAAY,oCAAGC,IAAI,CAACE,KAAR,CAAZ;AACA;AACH;AACJ;AATI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWL,aACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAsC,QAAA,YAAY,EAAEH,YAApD;AAAkE,QAAA,QAAQ,EAAE,kBAAAI,MAAM;AAAA,iBAAI,KAAI,CAACP,KAAL,CAAWQ,eAAX,CAA2B,KAAI,CAACR,KAAL,CAAWC,IAAtC,EAA4CQ,KAAK,CAACC,MAAN,CAAaC,KAAzD,CAAJ;AAAA,SAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,QAAQ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAQ,QAAA,KAAK,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFJ,EAGI;AAAQ,QAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ,EAII;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,EAKI;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,CADJ,CADJ;AAgBH;;;;EA9BqBd,S;;AAiC1BE,WAAW,CAACa,SAAZ,GAAwB;AACpBX,EAAAA,IAAI,EAAEH,SAAS,CAACe,MAAV,CAAiBC,UADH;AAEpBZ,EAAAA,KAAK,EAAEJ,SAAS,CAACiB,KAAV,CAAgBD,UAFH;AAGpBN,EAAAA,eAAe,EAAEV,SAAS,CAACkB,IAAV,CAAeF;AAHZ,CAAxB;AAMA,eAAef,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ChangeShelf extends Component {\r\n    // updateBookShelf = event => { this.props.updateBookShelf(this.props.book, event.target.value) }\r\n\r\n    render() {\r\n        const { book, books } = this.props\r\n\r\n        const currentShelf = 'none'\r\n        for (let item of books) {\r\n            if (item.id === book.id) {\r\n                currentShelf = item.shelf;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"book-shelf-changer\">\r\n                <select className=\"book-shelf-select\" defaultValue={currentShelf} onChange={option => this.props.updateBookShelf(this.props.book, event.target.value)} >\r\n                    <option value=\"move\" disabled>Move to...</option>\r\n                    <option value=\"currentlyReading\">Currently Reading</option>\r\n                    <option value=\"wantToRead\">Want to Read</option>\r\n                    <option value=\"read\">Read</option>\r\n                    <option value=\"none\">None</option>\r\n                    {/* {this.state.shelves.map(s => (\r\n                        (s.value === book.shelf) ?\r\n                            (<option key={s.key} value={s.value}>&#10003; {s.display}</option>) :\r\n                            (<option key={s.key} value={s.value}>{s.display}</option>)\r\n                    ))} */}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nChangeShelf.propTypes = {\r\n    book: PropTypes.object.isRequired,\r\n    books: PropTypes.array.isRequired,\r\n    updateBookShelf: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ChangeShelf"]},"metadata":{},"sourceType":"module"}