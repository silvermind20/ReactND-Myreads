{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\src\\\\BookList.js\";\nimport React from 'react';\nimport Book from './Book';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nvar BooksList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BooksList, _React$Component);\n\n  function BooksList(props) {\n    var _this;\n\n    _classCallCheck(this, BooksList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BooksList).call(this, props));\n\n    _this.updateBookShelf = function (shelf) {\n      // this.setState(currState => ({\n      //     books: currState.books\n      // }));\n      console.log(shelf);\n    };\n\n    _this.state = {\n      currReading: [],\n      wannaRead: [],\n      read: []\n    };\n    return _this;\n  }\n\n  _createClass(BooksList, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      var currentlyReading = this.props.books.filter(function (book) {\n        return book.shelf === 'currentlyReading';\n      });\n      console.log('filtered: ', currentlyReading); //     currentlyReading.forEach(book => {\n      //         this.setState(currState => ({\n      //             currReading: currState.currReading.concat(book)\n      //         }))\n      //     });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var books = this.props.books;\n      var _this$state = this.state,\n          currReading = _this$state.currReading,\n          wannaRead = _this$state.wannaRead,\n          read = _this$state.read;\n      console.log('API Books: ', books); // currentlyReading.forEach(book => {\n      //     this.setState(currState => ({\n      //         currReading: currState.currReading.concat(book)\n      //     }))\n      // });\n      // console.log('state: ', currReading)\n      // wannaRead = books.filter((book) => (\n      //     book.shelf === 'wantToRead'\n      // ))\n      // read = books.filter((book) => (\n      //     book.shelf === 'read'\n      // ))\n\n      return React.createElement(\"div\", {\n        className: \"list-books-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"open-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/search\",\n        className: \"open-search-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Add a book\")), React.createElement(\"div\", {\n        className: \"bookshelf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"bookshelf-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Currently Reading\"), React.createElement(\"div\", {\n        className: \"bookshelf-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, currReading.map(function (book) {\n        return React.createElement(Book, {\n          key: book.id,\n          book: book,\n          onUpdateShelf: _this2.updateBookShelf,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        });\n      })))));\n    }\n  }]);\n\n  return BooksList;\n}(React.Component);\n\nBooksList.propTypes = {\n  books: PropTypes.array.isRequired\n};\nexport default BooksList;","map":{"version":3,"sources":["C:\\Users\\Simin\\Documents\\ReactND\\P1\\src\\BookList.js"],"names":["React","Book","PropTypes","Link","BooksList","props","updateBookShelf","shelf","console","log","state","currReading","wannaRead","read","currentlyReading","books","filter","book","map","id","Component","propTypes","array","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;;IAGMC,S;;;;;AACF,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;;AADe,UAsBnBC,eAtBmB,GAsBD,UAAAC,KAAK,EAAI;AACvB;AACA;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KA3BkB;;AAEf,UAAKG,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,EADJ;AAETC,MAAAA,SAAS,EAAE,EAFF;AAGTC,MAAAA,IAAI,EAAE;AAHG,KAAb;AAFe;AAOlB;;;;8CAGyBR,K,EAAO;AAC7B,UAAMS,gBAAgB,GAAG,KAAKT,KAAL,CAAWU,KAAX,CAAiBC,MAAjB,CAAwB,UAACC,IAAD;AAAA,eAC7CA,IAAI,CAACV,KAAL,KAAe,kBAD8B;AAAA,OAAxB,CAAzB;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BK,gBAA1B,EAJ6B,CAK7B;AACA;AACA;AACA;AACA;AACH;;;6BASQ;AAAA;;AACL,UAAMC,KAAK,GAAG,KAAKV,KAAL,CAAWU,KAAzB;AADK,wBAEoC,KAAKL,KAFzC;AAAA,UAEGC,WAFH,eAEGA,WAFH;AAAA,UAEgBC,SAFhB,eAEgBA,SAFhB;AAAA,UAE2BC,IAF3B,eAE2BA,IAF3B;AAGLL,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BM,KAA3B,EAHK,CAML;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA,aACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,SAAT;AAAmB,QAAA,SAAS,EAAC,kBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADJ,EAII;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAEI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKJ,WAAW,CAACO,GAAZ,CAAgB,UAAAD,IAAI;AAAA,eAAK,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,IAAI,CAACE,EAAhB;AAAoB,UAAA,IAAI,EAAEF,IAA1B;AAAgC,UAAA,aAAa,EAAE,MAAI,CAACX,eAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAL;AAAA,OAApB,CADL,CADJ,CAFJ,CAJJ,CADJ;AA+BH;;;;EAnFmBN,KAAK,CAACoB,S;;AAsF9BhB,SAAS,CAACiB,SAAV,GAAsB;AAClBN,EAAAA,KAAK,EAAEb,SAAS,CAACoB,KAAV,CAAgBC;AADL,CAAtB;AAIA,eAAenB,SAAf","sourcesContent":["import React from 'react'\r\nimport Book from './Book'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nclass BooksList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            currReading: [],\r\n            wannaRead: [],\r\n            read: [],\r\n        }\r\n    }\r\n\r\n\r\n    componentWillReceiveProps(props) {\r\n        const currentlyReading = this.props.books.filter((book) => (\r\n            book.shelf === 'currentlyReading'\r\n        ))\r\n        console.log('filtered: ', currentlyReading)\r\n        //     currentlyReading.forEach(book => {\r\n        //         this.setState(currState => ({\r\n        //             currReading: currState.currReading.concat(book)\r\n        //         }))\r\n        //     });\r\n    }\r\n\r\n    updateBookShelf = shelf => {\r\n        // this.setState(currState => ({\r\n        //     books: currState.books\r\n        // }));\r\n        console.log(shelf)\r\n    }\r\n\r\n    render() {\r\n        const books = this.props.books\r\n        const { currReading, wannaRead, read } = this.state\r\n        console.log('API Books: ', books)\r\n\r\n\r\n        // currentlyReading.forEach(book => {\r\n        //     this.setState(currState => ({\r\n        //         currReading: currState.currReading.concat(book)\r\n        //     }))\r\n        // });\r\n\r\n        // console.log('state: ', currReading)\r\n\r\n        // wannaRead = books.filter((book) => (\r\n        //     book.shelf === 'wantToRead'\r\n        // ))\r\n        // read = books.filter((book) => (\r\n        //     book.shelf === 'read'\r\n        // ))\r\n\r\n\r\n        return (\r\n            <div className=\"list-books-content\">\r\n                <div className=\"open-search\">\r\n                    <Link to=\"/search\" className=\"open-search-link\">Add a book</Link>\r\n                </div>\r\n                <div className=\"bookshelf\">\r\n                    <h2 className=\"bookshelf-title\">Currently Reading</h2>\r\n                    <div className=\"bookshelf-books\">\r\n                        <ol className=\"books-grid\">\r\n                            {currReading.map(book => (<Book key={book.id} book={book} onUpdateShelf={this.updateBookShelf} />))}\r\n                        </ol>\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"bookshelf\">\r\n                    <h2 className=\"bookshelf-title\">Want to Read</h2>\r\n                    <div className=\"bookshelf-books\">\r\n                        <ol className=\"books-grid\">\r\n                            {wannaRead.map(book => (<Book key={book.id} book={book} onUpdateShelf={this.updateBookShelf} />))}\r\n                        </ol>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bookshelf\">\r\n                    <h2 className=\"bookshelf-title\">Read</h2>\r\n                    <div className=\"bookshelf-books\">\r\n                        <ol className=\"books-grid\">\r\n                            {read.map(book => (<Book key={book.id} book={book} onUpdateShelf={this.updateBookShelf} />))}\r\n                        </ol>\r\n                    </div>\r\n                </div> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nBooksList.propTypes = {\r\n    books: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default BooksList"]},"metadata":{},"sourceType":"module"}