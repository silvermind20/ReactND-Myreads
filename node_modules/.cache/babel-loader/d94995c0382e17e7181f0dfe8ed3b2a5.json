{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\src\\\\ChangeShelf.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar ChangeShelf =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChangeShelf, _Component);\n\n  function ChangeShelf() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ChangeShelf);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ChangeShelf)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.category = [{\n      key: 0,\n      value: \"currentlyReading\",\n      display: \"Currently Reading\",\n      selected: false\n    }, {\n      key: 1,\n      value: \"wantToRead\",\n      display: \"Want to Read\",\n      selected: false\n    }, {\n      key: 2,\n      value: \"read\",\n      display: \"Read\",\n      selected: false\n    }, {\n      key: 3,\n      value: \"none\",\n      display: \"None\",\n      selected: false\n    }];\n    return _this;\n  }\n\n  _createClass(ChangeShelf, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          book = _this$props.book,\n          books = _this$props.books;\n      var currentShelf = 'none';\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = books[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n\n          if (item.id === book.id) {\n            currentShelf = item.shelf;\n            break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"book-shelf-changer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"book-shelf-select\",\n        defaultValue: currentShelf,\n        onChange: function onChange(option) {\n          return _this2.props.updateBookShelf(_this2.props.book, option.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"move\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Move to...\"), this.category.map(function (s) {\n        return s.value === book.shelf ? React.createElement(\"option\", {\n          key: s.key,\n          value: s.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"\\u2713 \", s.display) : React.createElement(\"option\", {\n          key: s.key,\n          value: s.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, s.display);\n      })));\n    }\n  }]);\n\n  return ChangeShelf;\n}(Component);\n\nChangeShelf.propTypes = {\n  book: PropTypes.object.isRequired,\n  books: PropTypes.array.isRequired,\n  updateBookShelf: PropTypes.func.isRequired\n};\nexport default ChangeShelf;","map":{"version":3,"sources":["C:\\Users\\Simin\\Documents\\ReactND\\P1\\src\\ChangeShelf.js"],"names":["React","Component","PropTypes","ChangeShelf","category","key","value","display","selected","props","book","books","currentShelf","item","id","shelf","option","updateBookShelf","target","map","s","propTypes","object","isRequired","array","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ChangeShelf extends Component {\r\n    // updateBookShelf = event => { this.props.updateBookShelf(this.props.book, event.target.value) }\r\n    category = [\r\n        { key: 0, value: \"currentlyReading\", display: \"Currently Reading\", selected: false },\r\n        { key: 1, value: \"wantToRead\", display: \"Want to Read\", selected: false },\r\n        { key: 2, value: \"read\", display: \"Read\", selected: false },\r\n        { key: 3, value: \"none\", display: \"None\", selected: false }\r\n    ]\r\n\r\n    render() {\r\n        const { book, books } = this.props\r\n\r\n        let currentShelf = 'none'\r\n        for (let item of books) {\r\n            if (item.id === book.id) {\r\n                currentShelf = item.shelf;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"book-shelf-changer\">\r\n                <select className=\"book-shelf-select\" defaultValue={currentShelf} onChange={option => this.props.updateBookShelf(this.props.book, option.target.value)} >\r\n                    {/* <option value=\"move\" disabled>Move to...</option>\r\n                    <option value=\"currentlyReading\">Currently Reading</option>\r\n                    <option value=\"wantToRead\">Want to Read</option>\r\n                    <option value=\"read\">Read</option>\r\n                    <option value=\"none\">None</option> */}\r\n\r\n                    <option value=\"move\" disabled>Move to...</option>\r\n                    {this.category.map(s => (\r\n                        (s.value === book.shelf) ?\r\n                            (<option key={s.key} value={s.value}>&#10003; {s.display}</option>) :\r\n                            (<option key={s.key} value={s.value}>{s.display}</option>)\r\n                    ))}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nChangeShelf.propTypes = {\r\n    book: PropTypes.object.isRequired,\r\n    books: PropTypes.array.isRequired,\r\n    updateBookShelf: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ChangeShelf"]},"metadata":{},"sourceType":"module"}