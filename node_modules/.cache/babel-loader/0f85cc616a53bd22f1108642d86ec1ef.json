{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\src\\\\Search.js\";\nimport React from 'react';\nimport * as BooksAPI from './BooksAPI'; // import PropTypes from 'prop-types'\n\nimport { Link } from 'react-router-dom';\nimport Book from './Book';\n\nvar SearchBook =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SearchBook, _React$Component);\n\n  function SearchBook() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchBook);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchBook)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      query: ''\n    };\n\n    _this.handleInputChange = function (query) {\n      _this.setState({\n        query: query\n      });\n    };\n\n    _this.clearQuery = function () {\n      _this.updateQuery('');\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchBook, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      BooksAPI.search(this.state.query).then(function (foundBooks) {\n        _this2.setState(function (currentState) {\n          return {\n            books: currentState.books.concat([foundBooks])\n          };\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var query = this.state.query;\n      var searchedBooks = query === '' ? [] : this.props.books.filter(function (book) {\n        return book.title.toLowerCase().includes(query.toLowerCase()) // book.authors.filter(author => {\n        //     author.toLowerCase().includes(query.toLowerCase())\n        // })\n        ;\n      });\n      return React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"close-search\",\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Close\"), React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"query\",\n        placeholder: \"Search by title or author\",\n        value: query,\n        onChange: function onChange(event) {\n          return _this3.handleInputChange(event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, searchedBooks.map(function (book) {\n        return React.createElement(Book, {\n          key: book.id,\n          book: book,\n          onUpdateShelf: _this3.updateBookShelf,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        });\n      }))));\n    }\n  }]);\n\n  return SearchBook;\n}(React.Component);\n\nexport default SearchBook;","map":{"version":3,"sources":["C:\\Users\\Simin\\Documents\\ReactND\\P1\\src\\Search.js"],"names":["React","BooksAPI","Link","Book","SearchBook","state","query","handleInputChange","setState","clearQuery","updateQuery","search","then","foundBooks","currentState","books","concat","searchedBooks","props","filter","book","title","toLowerCase","includes","event","target","value","map","id","updateBookShelf","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B,C,CACA;;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;IAGMC,U;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,KAAK,EAAE;AADH,K;;UAeRC,iB,GAAoB,UAAAD,KAAK,EAAI;AACzB,YAAKE,QAAL,CAAc;AAAEF,QAAAA,KAAK,EAALA;AAAF,OAAd;AACH,K;;UACDG,U,GAAa,YAAM;AACf,YAAKC,WAAL,CAAiB,EAAjB;AACH,K;;;;;;;wCAhBmB;AAAA;;AAChBT,MAAAA,QAAQ,CAACU,MAAT,CAAgB,KAAKN,KAAL,CAAWC,KAA3B,EACKM,IADL,CACU,UAACC,UAAD,EAAgB;AAClB,QAAA,MAAI,CAACL,QAAL,CAAc,UAACM,YAAD;AAAA,iBAAmB;AAC7BC,YAAAA,KAAK,EAAED,YAAY,CAACC,KAAb,CAAmBC,MAAnB,CAA0B,CAACH,UAAD,CAA1B;AADsB,WAAnB;AAAA,SAAd;AAGH,OALL;AAMH;;;6BAYQ;AAAA;;AAAA,UACGP,KADH,GACa,KAAKD,KADlB,CACGC,KADH;AAEL,UAAMW,aAAa,GAAGX,KAAK,KAAK,EAAV,GAChB,EADgB,GAEhB,KAAKY,KAAL,CAAWH,KAAX,CAAiBI,MAAjB,CAAwB,UAACC,IAAD;AAAA,eACtBA,IAAI,CAACC,KAAL,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCjB,KAAK,CAACgB,WAAN,EAAlC,CADsB,CAEtB;AACA;AACA;AAJsB;AAAA,OAAxB,CAFN;AAUA,aACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,cAAhB;AAA+B,QAAA,EAAE,EAAC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAgC,QAAA,WAAW,EAAC,2BAA5C;AACI,QAAA,KAAK,EAAEhB,KADX;AACkB,QAAA,QAAQ,EAAE,kBAACkB,KAAD;AAAA,iBAAW,MAAI,CAACjB,iBAAL,CAAuBiB,KAAK,CAACC,MAAN,CAAaC,KAApC,CAAX;AAAA,SAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFJ,CADJ,EAQI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKT,aAAa,CAACU,GAAd,CAAkB,UAAAP,IAAI;AAAA,eAAK,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,IAAI,CAACQ,EAAhB;AAAoB,UAAA,IAAI,EAAER,IAA1B;AAAgC,UAAA,aAAa,EAAE,MAAI,CAACS,eAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAL;AAAA,OAAtB,CADL,CADJ,CARJ,CADJ;AAgBH;;;;EApDoB7B,KAAK,CAAC8B,S;;AAuD/B,eAAe1B,UAAf","sourcesContent":["import React from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\n// import PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport Book from './Book'\r\n\r\n\r\nclass SearchBook extends React.Component {\r\n    state = {\r\n        query: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        BooksAPI.search(this.state.query)\r\n            .then((foundBooks) => {\r\n                this.setState((currentState) => ({\r\n                    books: currentState.books.concat([foundBooks])\r\n                }))\r\n            })\r\n    }\r\n\r\n\r\n\r\n    handleInputChange = query => {\r\n        this.setState({ query })\r\n    }\r\n    clearQuery = () => {\r\n        this.updateQuery('')\r\n    }\r\n\r\n\r\n    render() {\r\n        const { query } = this.state\r\n        const searchedBooks = query === ''\r\n            ? []\r\n            : this.props.books.filter((book) => (\r\n                book.title.toLowerCase().includes(query.toLowerCase())\r\n                // book.authors.filter(author => {\r\n                //     author.toLowerCase().includes(query.toLowerCase())\r\n                // })\r\n\r\n            ))\r\n\r\n        return (\r\n            <div className=\"search-books\">\r\n                <div className=\"search-books-bar\">\r\n                    <Link className=\"close-search\" to=\"/\" >Close</Link>\r\n                    <div className=\"search-books-input-wrapper\">\r\n                        <input type=\"text\" name='query' placeholder=\"Search by title or author\"\r\n                            value={query} onChange={(event) => this.handleInputChange(event.target.value)} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"search-books-results\">\r\n                    <ol className=\"books-grid\">\r\n                        {searchedBooks.map(book => (<Book key={book.id} book={book} onUpdateShelf={this.updateBookShelf} />))}\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBook"]},"metadata":{},"sourceType":"module"}