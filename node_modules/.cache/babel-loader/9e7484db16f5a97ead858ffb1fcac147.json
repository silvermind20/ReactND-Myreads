{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Simin\\\\Documents\\\\ReactND\\\\P1\\\\src\\\\Search.js\";\nimport React from 'react'; // import PropTypes from 'prop-types'\n\nimport { Link } from 'react-router-dom';\nimport Book from './Book';\n\nvar Search =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Search, _React$Component);\n\n  function Search() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Search)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      query: '' // onSearchBook = (query) => {\n      //     this.setState(() => ({\n      //         query: query.trim()\n      //     }))\n      // }\n\n    };\n\n    _this.handleInputChange = function (query) {\n      _this.setState({\n        query: query\n      });\n    };\n\n    _this.clearQuery = function () {\n      _this.updateQuery('');\n    };\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      var query = this.state.query; // const searchedBooks = query === ''\n      //     ? []\n      //     : this.props.books.filter((book) => (\n      //         book.title.toLowerCase().includes(query.toLowerCase())\n      //         // book.authors.filter(author => {\n      //         //     author.toLowerCase().includes(query.toLowerCase())\n      //         // })\n      //     ))\n\n      return React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Search;\n}(React.Component);\n\nexport default Search;","map":{"version":3,"sources":["C:\\Users\\Simin\\Documents\\ReactND\\P1\\src\\Search.js"],"names":["React","Link","Book","Search","state","query","handleInputChange","setState","clearQuery","updateQuery","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;IAGMC,M;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,KAAK,EAAE,EADH,CAIR;AACA;AACA;AACA;AACA;;AARQ,K;;UAURC,iB,GAAoB,UAAAD,KAAK,EAAI;AACzB,YAAKE,QAAL,CAAc;AAAEF,QAAAA,KAAK,EAALA;AAAF,OAAd;AACH,K;;UACDG,U,GAAa,YAAM;AACf,YAAKC,WAAL,CAAiB,EAAjB;AACH,K;;;;;;;6BAGQ;AAAA,UACGJ,KADH,GACa,KAAKD,KADlB,CACGC,KADH,EAEL;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,aACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAgBH;;;;EA/CgBL,KAAK,CAACU,S;;AAkD3B,eAAeP,MAAf","sourcesContent":["import React from 'react'\r\n// import PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport Book from './Book'\r\n\r\n\r\nclass Search extends React.Component {\r\n    state = {\r\n        query: ''\r\n    }\r\n\r\n    // onSearchBook = (query) => {\r\n    //     this.setState(() => ({\r\n    //         query: query.trim()\r\n    //     }))\r\n    // }\r\n\r\n    handleInputChange = query => {\r\n        this.setState({ query })\r\n    }\r\n    clearQuery = () => {\r\n        this.updateQuery('')\r\n    }\r\n\r\n\r\n    render() {\r\n        const { query } = this.state\r\n        // const searchedBooks = query === ''\r\n        //     ? []\r\n        //     : this.props.books.filter((book) => (\r\n        //         book.title.toLowerCase().includes(query.toLowerCase())\r\n        //         // book.authors.filter(author => {\r\n        //         //     author.toLowerCase().includes(query.toLowerCase())\r\n        //         // })\r\n\r\n        //     ))\r\n\r\n        return (\r\n            <div className=\"search-books\">\r\n                {/* <div className=\"search-books-bar\">\r\n                    <Link className=\"close-search\" to=\"/\" >Close</Link>\r\n                    <div className=\"search-books-input-wrapper\">\r\n                        <input type=\"text\" name='query' placeholder=\"Search by title or author\"\r\n                            value={query} onChange={(event) => this.handleInputChange(event.target.value)} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"search-books-results\">\r\n                    <ol className=\"books-grid\">\r\n                        {searchedBooks.map(book => (<Book key={book.id} book={book} onUpdateShelf={this.updateBookShelf} />))}\r\n                    </ol>\r\n                </div> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search"]},"metadata":{},"sourceType":"module"}